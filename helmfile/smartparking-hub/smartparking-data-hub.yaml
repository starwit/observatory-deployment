repositories:
  - name: timescale
    url: https://charts.timescale.com/
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: bitnamicharts
    url: registry-1.docker.io/bitnamicharts
    oci: true
  - name: starwitorg
    url: registry-1.docker.io/starwitorg
    oci: true

helmDefaults:
  wait: true

environments:
  default:
    values:
      - namespace: observatory-data
        hostname: smart-parking
        tls: true
        auth:
          enabled: true
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          saebackend: {{ requiredEnv "DB_SAEBACKEND_SECRET" }}
          observatoryconfig: {{ requiredEnv "DB_OBSERVATORY_CONFIG_SECRET" }} 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
        odp:
          installed: true
          url: https://api.staging.wolfsburg.digital/context/v2/entities/
          auth_url: https://auth.staging.wolfsburg.digital/auth/realms/default/protocol/openid-connect/token
          password: {{ requiredEnv "ODP_PASSWORD" }}
        observatory:
          installed: true
        observatory-config:
          installed: true
        visualizer:
          installed: true
        keycloak:
          installed: true

  demonstration:
    values:
      - namespace: observatory-data
        hostname: pod03.local
        tls: false
        auth:
          enabled: false
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          saebackend: {{ requiredEnv "DB_SAEBACKEND_SECRET" }}
          observatoryconfig: {{ requiredEnv "DB_OBSERVATORY_CONFIG_SECRET" }} 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
        odp:
          installed: false
          url: none
          auth_url: none
          password: none
        observatory:
          installed: true
          redisStreamPrefix: "geomapper"
        observatoryconfig:
          installed: true
        visualizer:
          installed: true
        keycloak:
          installed: false
  wob-dev:
    values:  
      - namespace: observatory-data
        hostname: wob-data.starwit-infra.de
        tls: true
        auth:
          enabled: true
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          saebackend: {{ requiredEnv "DB_SAEBACKEND_SECRET" }}
          observatoryconfig: {{ requiredEnv "DB_OBSERVATORY_CONFIG_SECRET" }} 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
        odp:
          installed: true
          url: https://api.staging.wolfsburg.digital/context/v2/entities/
          auth_url: https://auth.staging.wolfsburg.digital/auth/realms/default/protocol/openid-connect/token
          password: {{ requiredEnv "ODP_PASSWORD" }}
        observatory:
          installed: true
          redisStreamPrefix: "meckauer"
        observatoryconfig:
          installed: true
        visualizer:
          installed: true
        keycloak:
          installed: true
  wob-staging:
    values:
      - namespace: observatory-data
        hostname: staging.data-wolfsburg.de
        tls: true
        auth:
          enabled: true
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          saebackend: {{ requiredEnv "DB_SAEBACKEND_SECRET" }}
          observatoryconfig: {{ requiredEnv "DB_OBSERVATORY_CONFIG_SECRET" }} 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
        odp:
          installed: true
          url: https://api.staging.wolfsburg.digital/context/v2/entities/
          auth_url: https://auth.staging.wolfsburg.digital/auth/realms/default/protocol/openid-connect/token
          password: {{ requiredEnv "ODP_PASSWORD" }}
        observatory:
          installed: true
          redisStreamPrefix: "meckauer"
        observatoryconfig:
          installed: true
        visualizer:
          installed: true
        keycloak:
          installed: true
  wob-prod:
    values:
      - namespace: observatory-data
        hostname: data-wolfsburg.de
        tls: true
        auth:
          enabled: true
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          saebackend: {{ requiredEnv "DB_SAEBACKEND_SECRET" }}
          observatoryconfig: {{ requiredEnv "DB_OBSERVATORY_CONFIG_SECRET" }} 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
        odp:
          installed: true
          url: https://api.wolfsburg.digital/context/v2/entities/
          auth_url: https://auth.wolfsburg.digital/auth/realms/default/protocol/openid-connect/token
          password: {{ requiredEnv "ODP_PASSWORD" }}
        observatory:
          installed: true
          redisStreamPrefix: "meckauer"
        observatoryconfig:
          installed: true
        visualizer:
          installed: true
        keycloak:
          installed: true
---
releases:
  - name: config-data
    namespace: {{ .Values.namespace }}
    chart: ./config-data
    installed: true
    values:
      - config-data/values.gotmpl

  - name: keycloak
    installed: {{ .Values.keycloak.installed}}
    namespace: {{ .Values.namespace }}
    chart: bitnamicharts/keycloak
    version: "25.2.0"
    values:
      - httpRelativePath: / # set context path for keycloak console
        auth:
          adminUser: admin
          adminPassword: {{ .Values.auth.keycloak_admin }}
        proxy: edge
        extraEnvVars:
          - name: KC_HOSTNAME_URL
            value: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}
          - name: KC_HOSTNAME_ADMIN_URL
            value: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}
        ingress:
          enabled: true
          hostname: auth.{{ .Values.hostname }}
          tls: true
          selfSigned: {{ eq .Environment.Name "default" }}
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
        postgresql:
          nameOverride: "keycloak-postgresql"
          auth:
            password: bn_keycloak
        keycloakConfigCli:
          enabled: true
          existingConfigmap: observatory

  - name: timescaledb
    installed: true
    namespace: {{ .Values.namespace }}
    chart: timescale/timescaledb-single
    version: 0.33.1  
    values:
      - replicaCount: 1
        service:
          primary:
            nodePort: 30001
            type: NodePort      
        postInit:
          - configMap:
              name: custom-init-scripts
              optional: true

  - name: valkey
    installed: true
    namespace: {{ .Values.namespace }}
    chart: bitnamicharts/valkey
    version: 3.0.31
    values:
      - image:
          repository: bitnamilegacy/valkey
          tag: latest
        architecture: standalone
        primary:
          service:
            type: NodePort
            nodePorts:
              valkey: 30379
        auth:
          enabled: false
        persistence:
          enabled: false
        commonConfiguration: |
          save ""
          appendonly no

  - name: grafana
    installed: true
    namespace: {{ .Values.namespace }}
    chart: grafana/grafana
    version: 7.3.7  
    values:
      - ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
          hosts:
            - dashboard.{{ .Values | get "hostname" "localhost" }}
          path: /
          tls:
          - hosts:
            - dashboard.{{ .Values | get "hostname" "localhost" }}
            secretName: dashboard.{{ .Values | get "hostname" "localhost" }}

        persistence:
          enabled: true
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Analytics-DB
                type: postgres
                editable: true
                url: timescaledb.{{ .Values.namespace }}.svc.cluster.local:5432
                user: analytics
                database: analytics
                secureJsonData:
                  password: '{{ .Values.dbpasswords.analytics }}'
        assertNoLeakedSecrets: false
        grafana.ini:
          server:
            root_url: http{{- if .Values.tls }}s{{- end }}://dashboard.{{ .Values | get "hostname" "localhost" }}/
          auth.generic_oauth:
            enabled: true
            name: Keycloak
            allow_sign_up: true
            scopes: openid profile email
            client_id: observatory-config
            client_secret: {{ .Values.auth.client_secret }}
            auth_url: 'http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}/realms/observatory-config/protocol/openid-connect/auth'
            token_url: 'http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}/realms/observatory-config/protocol/openid-connect/token'
            api_url: 'http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}/realms/observatory-config/protocol/openid-connect/userinfo'
            role_attribute_path: contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'dev') && 'Editor' || 'Viewer'
            allow_assign_grafana_admin: true

  - name: observatory-config
    installed: {{ .Values.observatoryconfig.installed}}
    namespace: {{ .Values.namespace }}
    chart: starwitorg/observatory-config-chart
    version: 0.9.5
    values:
      - image:
          tag: 0.9.5
        app:
          observatoryUrl: http://observatory.{{ .Values.namespace }}.svc.cluster.local/observatory
        auth:
          enabled: {{ .Values.auth.enabled}}
          keycloakRealmUrlInternal: http://keycloak.{{ .Values.namespace }}.svc.cluster.local/realms/observatory-config
          keycloakRealmUrlExternal: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}/realms/observatory-config
          clientId: observatory-config
          clientSecret: {{ .Values.auth.client_secret }}
        database:
          internal: false
          host: timescaledb.{{ .Values.namespace }}.svc.cluster.local
          port: 5432          
          name: observatoryconfig
          username: observatoryconfig
          password: {{ .Values.dbpasswords.observatoryconfig }}
        extraEnv: |
          - name: OIDC-CLIENT-REGISTRATION_CLIENT-AUTHENTICATION-METHOD  
            value: client_secret_post
        ingress:
          enabled: true
          hosts:
            - host: spc.{{ .Values.hostname }}
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls:
            - hosts:
              - spc.{{ .Values.hostname }}
              secretName: spc.{{ .Values.hostname }}

  - name: observatory
    installed: {{ .Values.observatory.installed}}
    namespace: {{ .Values.namespace }}
    chart: starwitorg/observatory-chart
    version: 1.3.1
    values:
      - app:
          port: 8081
        sae:
          redisStreamPrefix: {{ .Values.observatory.redisStreamPrefix }}
          redisHost: valkey-primary
          redisPort: 6379
        databases:
          observatory: 
            internal: false
            host: timescaledb.{{ .Values.namespace }}.svc.cluster.local
            port: 5432          
            database: observatory
            username: observatory
            password: {{ .Values.dbpasswords.observatory }}
          analytics:
            host: timescaledb.{{ .Values.namespace }}.svc.cluster.local
            port: 5432
            database: analytics
            username: analytics
            password: {{ .Values.dbpasswords.analytics }}
            isTimescale: true
        extraEnv: |
          - name: JAVA_TOOL_OPTIONS
            value: "-Xmx1024m"

  - name: odp-adapter
    installed: {{ .Values.odp.installed}}
    namespace: {{ .Values.namespace }}
    chart: starwitorg/odp-adapter-chart
    version: 0.0.8
    values:
      - odp:
          url: {{ .Values.odp.url }}
          auth_url: {{ .Values.odp.auth_url }}
          username: meckauer
          password: {{ .Values.odp.password }}
          update_frequency: 30000 # update every n milliseconds
          parkingareaid: OnStreetParking:38444039
          analytics_observation_area: parking
        analytics_db:
          url: jdbc:postgresql://timescaledb.{{ .Values.namespace }}.svc.cluster.local:5432/analytics
          driver: org.postgresql.Driver
          username: analytics
          password: {{ .Values.dbpasswords.analytics }} 

  - name: visualizer
    installed: {{ .Values.visualizer.installed}}
    namespace: {{ .Values.namespace }}
    chart: starwitorg/sae-visualizer-chart
    version: 1.2.0
    values:
      - auth:
          enabled: {{ .Values.auth.enabled}}
          keycloakRealmUrlInternal: http://keycloak.{{ .Values.namespace }}.svc.cluster.local/realms/observatory-config
          keycloakRealmUrlExternal: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}/realms/observatory-config
          clientId: observatory-config
          clientSecret: {{ .Values.auth.client_secret }}
        config:
          valkey:
            host: valkey-primary
            port: 6379
        ingress:
          enabled: true
          hosts:
          - host: visualizer.{{ .Values.hostname }}
            paths:
            - path: /
              pathType: ImplementationSpecific
