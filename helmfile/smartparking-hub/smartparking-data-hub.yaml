repositories:
  - name: timescale
    url: https://charts.timescale.com/
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: starwitorg
    url: registry-1.docker.io/starwitorg
    oci: true

helmDefaults:
  wait: true

environments:
  default:
    values:
      - namespace: observatory-data
        hostname: infra-biggpu
        tls: false
        auth:
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
  wob-dev:
    values:  
      - namespace: observatory-data
        hostname: wob-data.starwit-infra.de
        tls: true
        auth:
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
  wob-staging:
    values:
      - namespace: observatory-data
        hostname: staging.data-wolfsburg.de
        tls: true
        auth:
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
  wob-prod:
    values:
      - namespace: observatory-data
        hostname: data-wolfsburg.de
        tls: true
        auth:
          client_secret: {{ requiredEnv "CLIENT_SECRET" }}
          keycloak_admin: {{ requiredEnv "KEYCLOAK_ADMIN" }}
          realm_admin_pw: {{ requiredEnv "KEYKLOAK_CLIENT_ADMIN_SECRET" }}
        dbpasswords: 
          observatory: {{ requiredEnv "DB_OBSERVATORY_SECRET" }} 
          analytics: {{ requiredEnv "DB_ANALYTICS_SECRET" }}
---
releases:
  - name: config-data
    namespace: {{ .Values.namespace }}
    chart: ./config-data
    installed: true
    values:
      - config-data/values.gotmpl

  - name: keycloak
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/keycloak
    version: "24.0.2"
    values:
      - httpRelativePath: / # set context path for keycloak console
        auth:
          adminUser: admin
          adminPassword: {{ .Values.auth.keycloak_admin }}
        proxy: edge
        extraStartupArgs: "--hostname=http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}"
        extraEnvVars:
          - name: KC_HOSTNAME_ADMIN_URL
            value: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}            
        ingress:
          enabled: true
          autoGenerated: false
          hostname: auth.{{ .Values | get "hostname" "localhost" }}
        postgresql:
          nameOverride: "keycloak-postgresql"
          auth:
            password: bn_keycloak
        keycloakConfigCli:
          enabled: true
          existingConfigmap: observatory

  - name: timescaledb
    namespace: {{ .Values.namespace }}
    chart: timescale/timescaledb-single
    version: 0.33.1  
    values:
      - replicaCount: 1
        service:
          primary:
            nodePort: 30001
            type: NodePort      
        postInit:
          - configMap:
              name: custom-init-scripts
              optional: true

  - name: grafana
    namespace: {{ .Values.namespace }}
    chart: grafana/grafana
    version: 7.3.7  
    values:
      - ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
          hosts:
            - dashboard.{{ .Values | get "hostname" "localhost" }}
          path: /
          tls:
          - hosts:
            - dashboard.{{ .Values | get "hostname" "localhost" }}
            secretName: dashboard.{{ .Values | get "hostname" "localhost" }}

        persistence:
          enabled: true
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Analytics-DB
                type: postgres
                editable: true
                url: timescaledb.{{ .Values.namespace }}.svc.cluster.local:5432
                user: analytics
                database: analytics
                secureJsonData:
                  password: '{{ .Values.dbpasswords.analytics }}'
        assertNoLeakedSecrets: false
        grafana.ini:
          server:
            root_url: http{{- if .Values.tls }}s{{- end }}://dashboard.{{ .Values | get "hostname" "localhost" }}/
          auth.generic_oauth:
            enabled: true
            name: Keycloak
            allow_sign_up: true
            scopes: openid profile email
            client_id: observatory-config
            client_secret: {{ .Values.auth.client_secret }}
            auth_url: 'http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}/realms/observatory-config/protocol/openid-connect/auth'
            token_url: 'http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}/realms/observatory-config/protocol/openid-connect/token'
            api_url: 'http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}/realms/observatory-config/protocol/openid-connect/userinfo'
            role_attribute_path: contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'dev') && 'Editor' || 'Viewer'
            allow_assign_grafana_admin: true

  - name: observatory-config
    installed: true
    namespace: {{ .Values.namespace }}
    chart: starwitorg/observatory-config-chart
    version: 0.8.5
    values:
      - image:
          tag: 0.8.5
        auth:
          enabled: true
          keycloak_url: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}/realms/observatory-config
          client_id: observatory-config
          client_secret: {{ .Values.auth.client_secret }}
          keycloakRealmUrlInternal: http://auth.{{ .Values.hostname }}/realms/observatory-config
          keycloakRealmUrlExternal: https://auth.{{ .Values.hostname }}/realms/observatory-config
        postgresql:
          auth:
            database: observatory-config
            username: observatory-config
            password: observatory-config
        extraEnv: |
          - name: OBSERVATORY_URL
            value: http://observatory-observatory-chart.{{ .Values.namespace }}.svc.cluster.local/observatory      
        ingress:
          enabled: true
          hosts:
            - host: spc.{{ .Values.hostname }}
              paths:
                - path: /
                  pathType: ImplementationSpecific

  - name: observatory
    installed: true
    namespace: {{ .Values.namespace }}
    chart: starwitorg/observatory-chart
    version: 1.2.8
    values:
      - image:
          tag: 1.2.8
        app:
          port: 8081
        sae:
          redisStreamPrefix: geomapper
          redisHost: 100.90.178.96 #100.127.169.25
          redisPort: 6379
        databases:
          observatory: 
            internal: false
            host: timescaledb.{{ .Values.namespace }}.svc.cluster.local
            port: 5432          
            database: observatory
            username: observatory
            password: {{ .Values.dbpasswords.observatory }}
          analytics:
            host: timescaledb.{{ .Values.namespace }}.svc.cluster.local
            port: 5432
            database: analytics
            username: analytics
            password: {{ .Values.dbpasswords.analytics }}
        postgresql:
          auth:
            database: observatory
            username: observatory
            password: {{ .Values.dbpasswords.observatory }}